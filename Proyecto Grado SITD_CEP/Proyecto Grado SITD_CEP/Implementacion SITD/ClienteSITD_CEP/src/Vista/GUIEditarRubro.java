/*
 * Sistema de Información para la toma de Decisiones
 * Centro de Educación Permanente
 * Autor: 
 * Yesid Camilo Ortiz Castillo 
 */

/*
 * GUIEditarRubro.java
 *
 * Created on 14/08/2012, 11:17:24 PM
 */
package Vista;

import Controlador.ControlEntidad;
import Controlador.ControlPresupuesto;
import Controlador.ControlRubros;
import Estructural.Aporte_rubro_entidad;
import Estructural.Entidad_convenio;
import Estructural.Presupuesto;
import Estructural.Rubro_presupuestal;
import Modelo.IServicioConvenios;
import java.rmi.RemoteException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kmilo
 */
public class GUIEditarRubro extends javax.swing.JFrame {

  private IServicioConvenios servicioConvenios;
  private int id_rubro;
  private ControlRubros controlRubros;
  private ControlEntidad controlEntidad;
  private ControlPresupuesto controlPresupuesto;
  private int numeroConvenio;

  /** Creates new form GUIEditarRubro */
  public GUIEditarRubro(IServicioConvenios servicioConvenios, int id_rubro, int numeroConvenio) throws RemoteException {
    initComponents();
    this.servicioConvenios = servicioConvenios;
    controlRubros = new ControlRubros(servicioConvenios);
    controlEntidad = new ControlEntidad(servicioConvenios);
    controlPresupuesto = new ControlPresupuesto(servicioConvenios);
    this.numeroConvenio = numeroConvenio;
    this.id_rubro = id_rubro;
    this.setLocationRelativeTo(null);
    cargarDatosRubro();
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    panelEdicionRubro = new javax.swing.JPanel();
    panelDatosRubro = new javax.swing.JPanel();
    lblDescripcion = new javax.swing.JLabel();
    lblCantidad = new javax.swing.JLabel();
    lblValorUnitario = new javax.swing.JLabel();
    lblTotalRubro = new javax.swing.JLabel();
    lblTotalRubroValor = new javax.swing.JLabel();
    txtDescripcion = new javax.swing.JTextField();
    spinCantidad = new javax.swing.JSpinner();
    txtValor = new javax.swing.JTextField();
    panelAportesEntidad = new javax.swing.JPanel();
    scrollEntidades = new javax.swing.JScrollPane();
    tablaEntidades = new javax.swing.JTable();
    btnActualizarrRubroConvenio = new javax.swing.JButton();
    btnEliminarrRubroConvenio = new javax.swing.JButton();
    lblTitulo = new javax.swing.JLabel();
    lblIcono = new javax.swing.JLabel();
    barraMenu = new javax.swing.JMenuBar();
    menuArchivo = new javax.swing.JMenu();
    menuAyuda = new javax.swing.JMenu();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Editar Rubro Presupuestal");

    panelEdicionRubro.setBackground(new java.awt.Color(255, 255, 255));

    panelDatosRubro.setBackground(new java.awt.Color(255, 255, 255));
    panelDatosRubro.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos del Rubro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 2, 13))); // NOI18N

    lblDescripcion.setFont(new java.awt.Font("Calibri", 2, 13)); // NOI18N
    lblDescripcion.setText("Descripción");

    lblCantidad.setFont(new java.awt.Font("Calibri", 2, 13));
    lblCantidad.setText("Cantidad");

    lblValorUnitario.setFont(new java.awt.Font("Calibri", 2, 13));
    lblValorUnitario.setText("Valor Unitario");

    lblTotalRubro.setFont(new java.awt.Font("Calibri", 2, 13));
    lblTotalRubro.setText("Total Rubro");

    lblTotalRubroValor.setFont(new java.awt.Font("Calibri", 3, 14)); // NOI18N
    lblTotalRubroValor.setText("$0");

    txtDescripcion.setFont(new java.awt.Font("Calibri", 2, 13)); // NOI18N
    txtDescripcion.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

    spinCantidad.setFont(new java.awt.Font("Calibri", 2, 13)); // NOI18N
    spinCantidad.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    spinCantidad.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        spinCantidadMouseClicked(evt);
      }
    });
    spinCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        spinCantidadKeyPressed(evt);
      }
    });

    txtValor.setFont(new java.awt.Font("Calibri", 2, 13)); // NOI18N
    txtValor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    txtValor.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        txtValorKeyPressed(evt);
      }
      public void keyTyped(java.awt.event.KeyEvent evt) {
        txtValorKeyTyped(evt);
      }
    });

    panelAportesEntidad.setBackground(new java.awt.Color(255, 255, 255));
    panelAportesEntidad.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Aportes de las entidades", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 2, 13))); // NOI18N

    scrollEntidades.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    scrollEntidades.setFont(new java.awt.Font("Calibri", 2, 13));

    tablaEntidades.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {

      },
      new String [] {
        "Nombre Entidad", "NIT Entidad", "Monto del Aporte por Entidad"
      }
    ));
    tablaEntidades.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        tablaEntidadesKeyPressed(evt);
      }
    });
    scrollEntidades.setViewportView(tablaEntidades);

    javax.swing.GroupLayout panelAportesEntidadLayout = new javax.swing.GroupLayout(panelAportesEntidad);
    panelAportesEntidad.setLayout(panelAportesEntidadLayout);
    panelAportesEntidadLayout.setHorizontalGroup(
      panelAportesEntidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panelAportesEntidadLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(scrollEntidades, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE)
        .addContainerGap())
    );
    panelAportesEntidadLayout.setVerticalGroup(
      panelAportesEntidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(scrollEntidades, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
    );

    btnActualizarrRubroConvenio.setFont(new java.awt.Font("Calibri", 3, 13)); // NOI18N
    btnActualizarrRubroConvenio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/editar.png"))); // NOI18N
    btnActualizarrRubroConvenio.setText("Actualizar Rubro");
    btnActualizarrRubroConvenio.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnActualizarrRubroConvenioActionPerformed(evt);
      }
    });

    btnEliminarrRubroConvenio.setFont(new java.awt.Font("Calibri", 3, 13)); // NOI18N
    btnEliminarrRubroConvenio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminar.png"))); // NOI18N
    btnEliminarrRubroConvenio.setText("Eliminar Rubro");
    btnEliminarrRubroConvenio.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnEliminarrRubroConvenioActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout panelDatosRubroLayout = new javax.swing.GroupLayout(panelDatosRubro);
    panelDatosRubro.setLayout(panelDatosRubroLayout);
    panelDatosRubroLayout.setHorizontalGroup(
      panelDatosRubroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panelDatosRubroLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(panelDatosRubroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(panelDatosRubroLayout.createSequentialGroup()
            .addComponent(panelAportesEntidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(32, 32, 32)
            .addGroup(panelDatosRubroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(btnActualizarrRubroConvenio, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(btnEliminarrRubroConvenio, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addGroup(panelDatosRubroLayout.createSequentialGroup()
                .addComponent(lblTotalRubro)
                .addGap(18, 18, 18)
                .addComponent(lblTotalRubroValor, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))))
          .addGroup(panelDatosRubroLayout.createSequentialGroup()
            .addComponent(lblDescripcion)
            .addGap(28, 28, 28)
            .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(46, 46, 46)
            .addComponent(lblCantidad)
            .addGap(34, 34, 34)
            .addComponent(spinCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(65, 65, 65)
            .addComponent(lblValorUnitario)
            .addGap(26, 26, 26)
            .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap())
    );
    panelDatosRubroLayout.setVerticalGroup(
      panelDatosRubroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panelDatosRubroLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(panelDatosRubroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(panelDatosRubroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(lblValorUnitario)
            .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(panelDatosRubroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(lblDescripcion)
            .addComponent(lblCantidad)
            .addComponent(spinCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addGroup(panelDatosRubroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(panelDatosRubroLayout.createSequentialGroup()
            .addGap(18, 18, 18)
            .addComponent(panelAportesEntidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(panelDatosRubroLayout.createSequentialGroup()
            .addGap(41, 41, 41)
            .addGroup(panelDatosRubroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(lblTotalRubro)
              .addComponent(lblTotalRubroValor))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(btnActualizarrRubroConvenio, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(btnEliminarrRubroConvenio, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
            .addContainerGap())))
    );

    lblTitulo.setFont(new java.awt.Font("Calibri", 3, 24)); // NOI18N
    lblTitulo.setText("Edición de Rubro");

    lblIcono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/editarGrande.png"))); // NOI18N

    javax.swing.GroupLayout panelEdicionRubroLayout = new javax.swing.GroupLayout(panelEdicionRubro);
    panelEdicionRubro.setLayout(panelEdicionRubroLayout);
    panelEdicionRubroLayout.setHorizontalGroup(
      panelEdicionRubroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(panelEdicionRubroLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(panelEdicionRubroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(panelDatosRubro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(panelEdicionRubroLayout.createSequentialGroup()
            .addComponent(lblTitulo)
            .addGap(18, 18, 18)
            .addComponent(lblIcono)))
        .addContainerGap())
    );
    panelEdicionRubroLayout.setVerticalGroup(
      panelEdicionRubroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEdicionRubroLayout.createSequentialGroup()
        .addGroup(panelEdicionRubroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(panelEdicionRubroLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(lblIcono)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
          .addGroup(panelEdicionRubroLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(lblTitulo)
            .addGap(18, 18, 18)))
        .addComponent(panelDatosRubro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );

    menuArchivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/menuArchivo.png"))); // NOI18N
    menuArchivo.setText("Archivo");
    menuArchivo.setFont(new java.awt.Font("Calibri", 2, 13)); // NOI18N
    barraMenu.add(menuArchivo);

    menuAyuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/menuAyuda.png"))); // NOI18N
    menuAyuda.setText("Ayuda");
    menuAyuda.setFont(new java.awt.Font("Calibri", 2, 13)); // NOI18N
    barraMenu.add(menuAyuda);

    setJMenuBar(barraMenu);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(panelEdicionRubro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(panelEdicionRubro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

private void spinCantidadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_spinCantidadMouseClicked
// TODO add your handling code here:
  double valorUnitario = 0;
  int cantidad = 0;
  if (!txtValor.getText().equals("")) {
    try {
      valorUnitario = Double.parseDouble(txtValor.getText().trim());
      cantidad = Integer.parseInt(spinCantidad.getValue().toString());
      lblTotalRubroValor.setText(String.valueOf(valorUnitario * cantidad));
    } catch (Exception e) {
      JOptionPane.showMessageDialog(rootPane, "Debe Digitar valor unitario valido para el rubro", "Error valor unitario", 0);
    }
  }
}//GEN-LAST:event_spinCantidadMouseClicked

private void spinCantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spinCantidadKeyPressed
// TODO add your handling code here:
  double valorUnitario = 0;
  int cantidad = 0;
  if (!txtValor.getText().equals("")) {
    try {
      valorUnitario = Double.parseDouble(txtValor.getText().trim());
      cantidad = Integer.parseInt(spinCantidad.getValue().toString());
      lblTotalRubroValor.setText(String.valueOf(valorUnitario * cantidad));
    } catch (Exception e) {
      JOptionPane.showMessageDialog(rootPane, "Debe Digitar valor unitario valido para el rubro", "Error valor unitario", 0);
    }
  }
}//GEN-LAST:event_spinCantidadKeyPressed

private void txtValorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorKeyPressed
// TODO add your handling code here:
  double valorUnitario = 0;
  int cantidad = 0;
  if (!txtValor.getText().equals("")) {
    try {
      valorUnitario = Double.parseDouble(txtValor.getText().trim());
      cantidad = Integer.parseInt(spinCantidad.getValue().toString());
      lblTotalRubroValor.setText(String.valueOf(valorUnitario * cantidad));
    } catch (Exception e) {
      JOptionPane.showMessageDialog(rootPane, "Debe Digitar valor unitario valido para el rubro", "Error valor unitario", 0);
    }
  }
}//GEN-LAST:event_txtValorKeyPressed

private void txtValorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorKeyTyped
// TODO add your handling code here:
  double valorUnitario = 0;
  int cantidad = 0;
  if (!txtValor.getText().equals("")) {
    try {
      valorUnitario = Double.parseDouble(txtValor.getText().trim());
      cantidad = Integer.parseInt(spinCantidad.getValue().toString());
      lblTotalRubroValor.setText(String.valueOf(valorUnitario * cantidad));
    } catch (Exception e) {
      JOptionPane.showMessageDialog(rootPane, "Debe Digitar valor unitario valido para el rubro", "Error valor unitario", 0);
    }
  }
}//GEN-LAST:event_txtValorKeyTyped

private void tablaEntidadesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaEntidadesKeyPressed
// TODO add your handling code here:
  int numeroFilas = tablaEntidades.getRowCount();
  double total = 0;
  if (numeroFilas > 0) {
    for (int i = 0; i < numeroFilas; i++) {
      double valor_fila = 0;
      try {
        valor_fila = Double.parseDouble(tablaEntidades.getValueAt(i, 2).toString());
      } catch (Exception e) {
        JOptionPane.showMessageDialog(rootPane, "Para ingresar el monto presione doble click sobre la celda\ny digite el valor", "Ayuda del Sistema", 2);
      }
      if (valor_fila < 0) {
        JOptionPane.showMessageDialog(rootPane, "El monto del aporte de la Entidad debe ser mayor a cero (0)", "Valor invalido", 0);
        i = numeroFilas;
      } else {
        total = total + Double.parseDouble(tablaEntidades.getValueAt(i, 2).toString());
      }
    }
    double valorRubro = Double.parseDouble(lblTotalRubroValor.getText().trim());
    if (total > valorRubro) {
      JOptionPane.showMessageDialog(rootPane, "La suma de los aportes de las entidades no\npuede ser mayor al valor del rubro", "Aportes superiores", 0);
    }
  }
}//GEN-LAST:event_tablaEntidadesKeyPressed

private void btnActualizarrRubroConvenioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarrRubroConvenioActionPerformed
// TODO add your handling code here:
  boolean controlDatos = true;
  String descripcion = "";
  double valorUnita = 0;
  int cantidad;
  if (txtDescripcion.getText().trim().equals("")) {
    JOptionPane.showMessageDialog(rootPane, "Debe ingresar una descripción\nPara el rubro", "Descripcion de rubro vacia", 0);
    controlDatos = false;
  } else {
    descripcion = txtDescripcion.getText().trim();
  }
  if (txtValor.getText().trim().equals("")) {
    JOptionPane.showMessageDialog(rootPane, "Debe ingresar el valor unitario para el rubro", "Valor unitario vacio", 0);
    controlDatos = false;
  } else {
    try {
      valorUnita = Double.parseDouble(txtValor.getText().trim());
    } catch (Exception e) {
      JOptionPane.showMessageDialog(rootPane, "Debe ingresar un valor numerico valido \nEjemplo: 1000", "Valor unitario incorrrecto", 0);
      controlDatos = false;
    }
  }
  double valorControl = 0;
  for (int i = 0; i < tablaEntidades.getRowCount(); i++) {
    valorControl = valorControl + Double.parseDouble(tablaEntidades.getValueAt(i, 2).toString());
  }
  if (valorControl < Double.parseDouble(lblTotalRubroValor.getText().trim())) {
    JOptionPane.showMessageDialog(rootPane, "La suma de los aportes de la entidad deben ser \niguales a el valor total del rubro", "Valor de rubro incorrecto", 0);
    controlDatos = false;
  } else if (valorControl > Double.parseDouble(lblTotalRubroValor.getText().trim())) {
    JOptionPane.showMessageDialog(rootPane, "La suma de los aportes de las entidades no\npuede ser mayor al valor del rubro", "Aportes superiores", 0);
    controlDatos = false;
  }
  if (controlDatos) {
    Presupuesto presupuesto = null;
    try {
      presupuesto = controlPresupuesto.PresupuestoPorConvenio(numeroConvenio);
    } catch (Exception e) {
      JOptionPane.showMessageDialog(rootPane, "No se ha creado un presupuesto para el\n convenio numero: " + numeroConvenio, "No hay presupuesto para el convenio", 0);
    }
    if (presupuesto != null) {
      cantidad = Integer.parseInt(spinCantidad.getValue().toString());
      Rubro_presupuestal rubro = new Rubro_presupuestal(id_rubro, descripcion, cantidad, valorUnita, presupuesto.getId_presupuesto());
      try {
        boolean controlActRubro = controlRubros.ActualizarRubro(rubro);
        if (controlActRubro) {
          int numero_filas = tablaEntidades.getRowCount();
          boolean controlAddRubros = true;
          for (int i = 0; i < numero_filas; i++) {
            boolean controlAportes = false;
            String NIT = tablaEntidades.getValueAt(i, 1).toString();
            double monto_aporte = 0;
            if (!tablaEntidades.getValueAt(i, 2).toString().trim().equals("")) {
              monto_aporte = Double.parseDouble(tablaEntidades.getValueAt(i, 2).toString());
            }
            Aporte_rubro_entidad aporte_rubro_entidad = new Aporte_rubro_entidad(0, NIT, monto_aporte, id_rubro);
            try {
              controlAportes = controlRubros.ActualizarAporte_rubro_entidad(aporte_rubro_entidad);
              if (!controlAportes) {
                JOptionPane.showMessageDialog(rootPane, "No se pudo Actualizar el aporte de la entidad: "
                        + tablaEntidades.getValueAt(i, 0), "Error Actualizar aporte", 0);
                controlAddRubros = false;
              }
            } catch (Exception e) {
              JOptionPane.showMessageDialog(rootPane, "No se pudo Actualizar el aporte de la entidad: "
                      + tablaEntidades.getValueAt(i, 0), "Error Actualizar aporte", 0);
            }
          }
          if (controlAddRubros) {
            JOptionPane.showMessageDialog(rootPane, "Se ha actualizado el rubro del presupuesto asignado al convenio N°: " + numeroConvenio, "Actualizacion de Rubro Exitosa", 1);
            this.dispose();
          }
        }
      } catch (Exception e) {
        System.out.println(e.getMessage());
      }
    }
  }
}//GEN-LAST:event_btnActualizarrRubroConvenioActionPerformed

private void btnEliminarrRubroConvenioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarrRubroConvenioActionPerformed
// TODO add your handling code here:
  int opcion = JOptionPane.showConfirmDialog(rootPane, "Desea Eliminar el rubro actual\nConsidere que esta acción no se podrá deshacer", "Desea Eliminar el Rubro?", 0);
  if (opcion == 0) {
    try {
      Rubro_presupuestal rubro = controlRubros.ConsultaRubroPorId_Rubro(id_rubro);
      boolean controlEliminacionRubro = false;
      boolean controlEliminacionAporte = false;
      boolean controlEliminacionEjecucion = false;
      controlEliminacionRubro = controlRubros.EliminarRubro_presupuestal(rubro);
      if (controlEliminacionRubro) {
        JOptionPane.showMessageDialog(rootPane, "Se ha Eliminado el rubro del presupuesto asignado al convenio N°: " + numeroConvenio, "Eliminación de Rubro Exitosa", 1);
        controlEliminacionAporte = controlRubros.EliminarAporte_rubro_entidad_PorRubro(rubro);
        controlEliminacionEjecucion = controlPresupuesto.EliminarEjecucion_presupuesto_PorRubro(rubro);
      } else {
        JOptionPane.showMessageDialog(rootPane, "No se pudo Eliminar el rubro ", "Error eliminación rubro", 0);
      }
      if (controlEliminacionAporte) {
        JOptionPane.showMessageDialog(rootPane, "Se han Eliminado los aportes pertenecientes \nal rubro del presupuesto asignado al convenio N°: " + numeroConvenio, "Eliminación de Aportes Exitosa", 1);
      } else {
        JOptionPane.showMessageDialog(rootPane, "No se han podido eliminar los aportes \nAsociados a este rubro", "Error eliminación Aportes", 0);
      }
      if (controlEliminacionEjecucion) {
        JOptionPane.showMessageDialog(rootPane, "Se han Eliminado las ejecuciones presupuestales del rubro perteneciente al\npresupuesto asignado al convenio N°: " + numeroConvenio, "Eliminación de Ejecuciones Exitosa", 1);
      } else {
        JOptionPane.showMessageDialog(rootPane, "No se han podido eliminar las ejecuciones\npresupuestales vinculadas a este rubro", "Error eliminación ejecuciones", 0);
      }
      this.dispose();
    } catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }
}//GEN-LAST:event_btnEliminarrRubroConvenioActionPerformed
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JMenuBar barraMenu;
  private javax.swing.JButton btnActualizarrRubroConvenio;
  private javax.swing.JButton btnEliminarrRubroConvenio;
  private javax.swing.JLabel lblCantidad;
  private javax.swing.JLabel lblDescripcion;
  private javax.swing.JLabel lblIcono;
  private javax.swing.JLabel lblTitulo;
  private javax.swing.JLabel lblTotalRubro;
  private javax.swing.JLabel lblTotalRubroValor;
  private javax.swing.JLabel lblValorUnitario;
  private javax.swing.JMenu menuArchivo;
  private javax.swing.JMenu menuAyuda;
  private javax.swing.JPanel panelAportesEntidad;
  private javax.swing.JPanel panelDatosRubro;
  private javax.swing.JPanel panelEdicionRubro;
  private javax.swing.JScrollPane scrollEntidades;
  private javax.swing.JSpinner spinCantidad;
  private javax.swing.JTable tablaEntidades;
  private javax.swing.JTextField txtDescripcion;
  private javax.swing.JTextField txtValor;
  // End of variables declaration//GEN-END:variables

  private void cargarDatosRubro() throws RemoteException {
    Rubro_presupuestal rubro = controlRubros.ConsultaRubroPorId_Rubro(id_rubro);
    if (rubro != null) {
      txtDescripcion.setText(rubro.getDescripcion_rubro());
      spinCantidad.setValue(rubro.getCantidad());
      txtValor.setText(String.valueOf(rubro.getValor_unitario()));
      double total = rubro.getCantidad() * rubro.getValor_unitario();
      lblTotalRubroValor.setText(String.valueOf(total));
      cargarAportesEntidad();
    }
  }

  private void cargarAportesEntidad() throws RemoteException {
    Rubro_presupuestal rubro = controlRubros.ConsultaRubroPorId_Rubro(id_rubro);
    if (rubro != null) {
      ArrayList<Aporte_rubro_entidad> aportes = controlRubros.ConsultaAportesPorRubroEntidad(rubro);
      int fila = 0;
      for (int i = 0; i < aportes.size(); i++) {
        if (tablaEntidades.getRowCount() == fila) {
          DefaultTableModel tablaTemp = (DefaultTableModel) tablaEntidades.getModel();
          Object nuevo[] = {null, null, null};
          tablaTemp.addRow(nuevo);
        }
        Entidad_convenio entidad = controlEntidad.ConsultaEntidad(aportes.get(i).getNIT_entidad());
        tablaEntidades.setValueAt(entidad.getNombre_entidad(), fila, 0);
        tablaEntidades.setValueAt(entidad.getNIT_entidad(), fila, 1);
        tablaEntidades.setValueAt(aportes.get(i).getMonto_aporte_rubro(), fila, 2);
        fila++;
      }
      if (tablaEntidades.getRowCount() > fila) {
        DefaultTableModel tablaTemp = (DefaultTableModel) tablaEntidades.getModel();
        tablaTemp.removeRow(fila);
      }
    }
  }
}
